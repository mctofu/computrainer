// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/github.com/mctofu/computrainer/controller.proto

package computrainer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ControlData_Button int32

const (
	ControlData_RESET ControlData_Button = 0
	ControlData_F1    ControlData_Button = 1
	ControlData_F2    ControlData_Button = 2
	ControlData_F3    ControlData_Button = 3
	ControlData_PLUS  ControlData_Button = 4
	ControlData_MINUS ControlData_Button = 5
)

var ControlData_Button_name = map[int32]string{
	0: "RESET",
	1: "F1",
	2: "F2",
	3: "F3",
	4: "PLUS",
	5: "MINUS",
}
var ControlData_Button_value = map[string]int32{
	"RESET": 0,
	"F1":    1,
	"F2":    2,
	"F3":    3,
	"PLUS":  4,
	"MINUS": 5,
}

func (x ControlData_Button) String() string {
	return proto.EnumName(ControlData_Button_name, int32(x))
}
func (ControlData_Button) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_controller_247dcfe71e242c68, []int{4, 0}
}

type PerformanceData_Type int32

const (
	PerformanceData_SPEED       PerformanceData_Type = 0
	PerformanceData_POWER       PerformanceData_Type = 1
	PerformanceData_CADENCE     PerformanceData_Type = 2
	PerformanceData_HEART_RATE  PerformanceData_Type = 3
	PerformanceData_CALIBRATION PerformanceData_Type = 4
)

var PerformanceData_Type_name = map[int32]string{
	0: "SPEED",
	1: "POWER",
	2: "CADENCE",
	3: "HEART_RATE",
	4: "CALIBRATION",
}
var PerformanceData_Type_value = map[string]int32{
	"SPEED":       0,
	"POWER":       1,
	"CADENCE":     2,
	"HEART_RATE":  3,
	"CALIBRATION": 4,
}

func (x PerformanceData_Type) String() string {
	return proto.EnumName(PerformanceData_Type_name, int32(x))
}
func (PerformanceData_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_controller_247dcfe71e242c68, []int{5, 0}
}

type DataRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataRequest) Reset()         { *m = DataRequest{} }
func (m *DataRequest) String() string { return proto.CompactTextString(m) }
func (*DataRequest) ProtoMessage()    {}
func (*DataRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_247dcfe71e242c68, []int{0}
}
func (m *DataRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataRequest.Unmarshal(m, b)
}
func (m *DataRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataRequest.Marshal(b, m, deterministic)
}
func (dst *DataRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataRequest.Merge(dst, src)
}
func (m *DataRequest) XXX_Size() int {
	return xxx_messageInfo_DataRequest.Size(m)
}
func (m *DataRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DataRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DataRequest proto.InternalMessageInfo

type LoadRequest struct {
	TargetLoad           int32    `protobuf:"varint,1,opt,name=target_load,json=targetLoad" json:"target_load,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadRequest) Reset()         { *m = LoadRequest{} }
func (m *LoadRequest) String() string { return proto.CompactTextString(m) }
func (*LoadRequest) ProtoMessage()    {}
func (*LoadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_247dcfe71e242c68, []int{1}
}
func (m *LoadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadRequest.Unmarshal(m, b)
}
func (m *LoadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadRequest.Marshal(b, m, deterministic)
}
func (dst *LoadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadRequest.Merge(dst, src)
}
func (m *LoadRequest) XXX_Size() int {
	return xxx_messageInfo_LoadRequest.Size(m)
}
func (m *LoadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoadRequest proto.InternalMessageInfo

func (m *LoadRequest) GetTargetLoad() int32 {
	if m != nil {
		return m.TargetLoad
	}
	return 0
}

type LoadResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoadResponse) Reset()         { *m = LoadResponse{} }
func (m *LoadResponse) String() string { return proto.CompactTextString(m) }
func (*LoadResponse) ProtoMessage()    {}
func (*LoadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_247dcfe71e242c68, []int{2}
}
func (m *LoadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoadResponse.Unmarshal(m, b)
}
func (m *LoadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoadResponse.Marshal(b, m, deterministic)
}
func (dst *LoadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoadResponse.Merge(dst, src)
}
func (m *LoadResponse) XXX_Size() int {
	return xxx_messageInfo_LoadResponse.Size(m)
}
func (m *LoadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LoadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LoadResponse proto.InternalMessageInfo

type ControllerData struct {
	ControlData          *ControlData     `protobuf:"bytes,1,opt,name=control_data,json=controlData" json:"control_data,omitempty"`
	PerformanceData      *PerformanceData `protobuf:"bytes,2,opt,name=performance_data,json=performanceData" json:"performance_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *ControllerData) Reset()         { *m = ControllerData{} }
func (m *ControllerData) String() string { return proto.CompactTextString(m) }
func (*ControllerData) ProtoMessage()    {}
func (*ControllerData) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_247dcfe71e242c68, []int{3}
}
func (m *ControllerData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControllerData.Unmarshal(m, b)
}
func (m *ControllerData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControllerData.Marshal(b, m, deterministic)
}
func (dst *ControllerData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControllerData.Merge(dst, src)
}
func (m *ControllerData) XXX_Size() int {
	return xxx_messageInfo_ControllerData.Size(m)
}
func (m *ControllerData) XXX_DiscardUnknown() {
	xxx_messageInfo_ControllerData.DiscardUnknown(m)
}

var xxx_messageInfo_ControllerData proto.InternalMessageInfo

func (m *ControllerData) GetControlData() *ControlData {
	if m != nil {
		return m.ControlData
	}
	return nil
}

func (m *ControllerData) GetPerformanceData() *PerformanceData {
	if m != nil {
		return m.PerformanceData
	}
	return nil
}

type ControlData struct {
	Pressed              []ControlData_Button `protobuf:"varint,1,rep,packed,name=pressed,enum=computrainer.ControlData_Button" json:"pressed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ControlData) Reset()         { *m = ControlData{} }
func (m *ControlData) String() string { return proto.CompactTextString(m) }
func (*ControlData) ProtoMessage()    {}
func (*ControlData) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_247dcfe71e242c68, []int{4}
}
func (m *ControlData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ControlData.Unmarshal(m, b)
}
func (m *ControlData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ControlData.Marshal(b, m, deterministic)
}
func (dst *ControlData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ControlData.Merge(dst, src)
}
func (m *ControlData) XXX_Size() int {
	return xxx_messageInfo_ControlData.Size(m)
}
func (m *ControlData) XXX_DiscardUnknown() {
	xxx_messageInfo_ControlData.DiscardUnknown(m)
}

var xxx_messageInfo_ControlData proto.InternalMessageInfo

func (m *ControlData) GetPressed() []ControlData_Button {
	if m != nil {
		return m.Pressed
	}
	return nil
}

type PerformanceData struct {
	Type                 PerformanceData_Type `protobuf:"varint,1,opt,name=type,enum=computrainer.PerformanceData_Type" json:"type,omitempty"`
	Value                float32              `protobuf:"fixed32,2,opt,name=value" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PerformanceData) Reset()         { *m = PerformanceData{} }
func (m *PerformanceData) String() string { return proto.CompactTextString(m) }
func (*PerformanceData) ProtoMessage()    {}
func (*PerformanceData) Descriptor() ([]byte, []int) {
	return fileDescriptor_controller_247dcfe71e242c68, []int{5}
}
func (m *PerformanceData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PerformanceData.Unmarshal(m, b)
}
func (m *PerformanceData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PerformanceData.Marshal(b, m, deterministic)
}
func (dst *PerformanceData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PerformanceData.Merge(dst, src)
}
func (m *PerformanceData) XXX_Size() int {
	return xxx_messageInfo_PerformanceData.Size(m)
}
func (m *PerformanceData) XXX_DiscardUnknown() {
	xxx_messageInfo_PerformanceData.DiscardUnknown(m)
}

var xxx_messageInfo_PerformanceData proto.InternalMessageInfo

func (m *PerformanceData) GetType() PerformanceData_Type {
	if m != nil {
		return m.Type
	}
	return PerformanceData_SPEED
}

func (m *PerformanceData) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterType((*DataRequest)(nil), "computrainer.DataRequest")
	proto.RegisterType((*LoadRequest)(nil), "computrainer.LoadRequest")
	proto.RegisterType((*LoadResponse)(nil), "computrainer.LoadResponse")
	proto.RegisterType((*ControllerData)(nil), "computrainer.ControllerData")
	proto.RegisterType((*ControlData)(nil), "computrainer.ControlData")
	proto.RegisterType((*PerformanceData)(nil), "computrainer.PerformanceData")
	proto.RegisterEnum("computrainer.ControlData_Button", ControlData_Button_name, ControlData_Button_value)
	proto.RegisterEnum("computrainer.PerformanceData_Type", PerformanceData_Type_name, PerformanceData_Type_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ControllerClient is the client API for Controller service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerClient interface {
	GetData(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (Controller_GetDataClient, error)
	SetLoad(ctx context.Context, in *LoadRequest, opts ...grpc.CallOption) (*LoadResponse, error)
}

type controllerClient struct {
	cc *grpc.ClientConn
}

func NewControllerClient(cc *grpc.ClientConn) ControllerClient {
	return &controllerClient{cc}
}

func (c *controllerClient) GetData(ctx context.Context, in *DataRequest, opts ...grpc.CallOption) (Controller_GetDataClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Controller_serviceDesc.Streams[0], "/computrainer.Controller/GetData", opts...)
	if err != nil {
		return nil, err
	}
	x := &controllerGetDataClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Controller_GetDataClient interface {
	Recv() (*ControllerData, error)
	grpc.ClientStream
}

type controllerGetDataClient struct {
	grpc.ClientStream
}

func (x *controllerGetDataClient) Recv() (*ControllerData, error) {
	m := new(ControllerData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *controllerClient) SetLoad(ctx context.Context, in *LoadRequest, opts ...grpc.CallOption) (*LoadResponse, error) {
	out := new(LoadResponse)
	err := c.cc.Invoke(ctx, "/computrainer.Controller/SetLoad", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Controller service

type ControllerServer interface {
	GetData(*DataRequest, Controller_GetDataServer) error
	SetLoad(context.Context, *LoadRequest) (*LoadResponse, error)
}

func RegisterControllerServer(s *grpc.Server, srv ControllerServer) {
	s.RegisterService(&_Controller_serviceDesc, srv)
}

func _Controller_GetData_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(DataRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ControllerServer).GetData(m, &controllerGetDataServer{stream})
}

type Controller_GetDataServer interface {
	Send(*ControllerData) error
	grpc.ServerStream
}

type controllerGetDataServer struct {
	grpc.ServerStream
}

func (x *controllerGetDataServer) Send(m *ControllerData) error {
	return x.ServerStream.SendMsg(m)
}

func _Controller_SetLoad_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServer).SetLoad(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/computrainer.Controller/SetLoad",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServer).SetLoad(ctx, req.(*LoadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Controller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "computrainer.Controller",
	HandlerType: (*ControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetLoad",
			Handler:    _Controller_SetLoad_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetData",
			Handler:       _Controller_GetData_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "src/github.com/mctofu/computrainer/controller.proto",
}

func init() {
	proto.RegisterFile("src/github.com/mctofu/computrainer/controller.proto", fileDescriptor_controller_247dcfe71e242c68)
}

var fileDescriptor_controller_247dcfe71e242c68 = []byte{
	// 451 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x52, 0xd1, 0x6e, 0xd3, 0x30,
	0x14, 0x6d, 0xd2, 0xb4, 0x85, 0x9b, 0x92, 0x5a, 0x16, 0x0f, 0x50, 0x81, 0x98, 0xfc, 0xb4, 0xa7,
	0x14, 0x52, 0x89, 0x07, 0xc4, 0x03, 0x69, 0xeb, 0xb1, 0xa2, 0xd2, 0x55, 0x4e, 0x26, 0x1e, 0x2b,
	0x2f, 0xf5, 0xc6, 0xa4, 0x36, 0x0e, 0x8e, 0x83, 0xb4, 0x6f, 0xe0, 0x07, 0xf6, 0x0f, 0xfc, 0x24,
	0x8a, 0x13, 0x68, 0x56, 0x95, 0x3d, 0xd9, 0xf7, 0xfa, 0xf8, 0xdc, 0x73, 0xef, 0x3d, 0x30, 0xce,
	0x55, 0x32, 0xba, 0xb9, 0xd5, 0xdf, 0x8b, 0x2b, 0x3f, 0x91, 0xbb, 0xd1, 0x2e, 0xd1, 0xf2, 0xba,
	0x18, 0x25, 0x72, 0x97, 0x15, 0x5a, 0xf1, 0xdb, 0x54, 0xa8, 0x51, 0x22, 0x53, 0xad, 0xe4, 0x76,
	0x2b, 0x94, 0x9f, 0x29, 0xa9, 0x25, 0xee, 0x37, 0x9f, 0xc9, 0x33, 0x70, 0x67, 0x5c, 0x73, 0x26,
	0x7e, 0x14, 0x22, 0xd7, 0xc4, 0x07, 0x77, 0x21, 0xf9, 0xa6, 0x0e, 0xf1, 0x1b, 0x70, 0x35, 0x57,
	0x37, 0x42, 0xaf, 0xb7, 0x92, 0x6f, 0x5e, 0x58, 0x27, 0xd6, 0x69, 0x87, 0x41, 0x95, 0x2a, 0x71,
	0xc4, 0x83, 0x7e, 0x85, 0xcf, 0x33, 0x99, 0xe6, 0x82, 0xdc, 0x5b, 0xe0, 0x4d, 0xff, 0x55, 0x2c,
	0x99, 0xf1, 0x47, 0xe8, 0xd7, 0x1a, 0xd6, 0x1b, 0xae, 0xb9, 0x21, 0x71, 0x83, 0x97, 0x7e, 0x53,
	0x86, 0x5f, 0xff, 0x31, 0x52, 0xdc, 0x64, 0x1f, 0xe0, 0x73, 0x40, 0x99, 0x50, 0xd7, 0x52, 0xed,
	0x78, 0x9a, 0x88, 0x8a, 0xc1, 0x36, 0x0c, 0xaf, 0x1f, 0x32, 0xac, 0xf6, 0x28, 0xc3, 0x32, 0xc8,
	0x1e, 0x26, 0xc8, 0x2f, 0x0b, 0xdc, 0x46, 0x19, 0xfc, 0x01, 0x7a, 0x99, 0x12, 0x79, 0x2e, 0xca,
	0xbe, 0xda, 0xa7, 0x5e, 0x70, 0xf2, 0x5f, 0x49, 0xfe, 0xa4, 0xd0, 0x5a, 0xa6, 0xec, 0xef, 0x07,
	0xf2, 0x09, 0xba, 0x55, 0x0a, 0x3f, 0x85, 0x0e, 0xa3, 0x11, 0x8d, 0x51, 0x0b, 0x77, 0xc1, 0x3e,
	0x7b, 0x87, 0x2c, 0x73, 0x06, 0xc8, 0x36, 0xe7, 0x18, 0xb5, 0xf1, 0x13, 0x70, 0x56, 0x8b, 0xcb,
	0x08, 0x39, 0x25, 0xf8, 0xeb, 0x7c, 0x79, 0x19, 0xa1, 0x0e, 0xf9, 0x6d, 0xc1, 0xe0, 0x40, 0x32,
	0x7e, 0x0f, 0x8e, 0xbe, 0xcb, 0x84, 0x99, 0x90, 0x17, 0x90, 0x47, 0xfb, 0xf3, 0xe3, 0xbb, 0x4c,
	0x30, 0x83, 0xc7, 0xcf, 0xa1, 0xf3, 0x93, 0x6f, 0x0b, 0x61, 0x06, 0x63, 0xb3, 0x2a, 0x20, 0x5f,
	0xc0, 0x29, 0x31, 0x65, 0xd1, 0x68, 0x45, 0xe9, 0x0c, 0xb5, 0xca, 0xeb, 0xea, 0xe2, 0x1b, 0x65,
	0xc8, 0xc2, 0x2e, 0xf4, 0xa6, 0xe1, 0x8c, 0x2e, 0xa7, 0x14, 0xd9, 0xd8, 0x03, 0x38, 0xa7, 0x21,
	0x8b, 0xd7, 0x2c, 0x8c, 0x29, 0x6a, 0xe3, 0x01, 0xb8, 0xd3, 0x70, 0x31, 0x9f, 0xb0, 0x30, 0x9e,
	0x5f, 0x2c, 0x91, 0x13, 0xdc, 0x5b, 0x00, 0xfb, 0xb5, 0xe2, 0x33, 0xe8, 0x7d, 0x16, 0xda, 0x68,
	0x3e, 0xd8, 0x63, 0xc3, 0x4b, 0xc3, 0x57, 0x47, 0xe7, 0x59, 0xdb, 0x82, 0xb4, 0xde, 0x5a, 0x78,
	0x02, 0xbd, 0xa8, 0x32, 0xd2, 0x21, 0x4f, 0xc3, 0x84, 0xc3, 0xe1, 0xb1, 0xa7, 0xda, 0x6f, 0xad,
	0xab, 0xae, 0x71, 0xf5, 0xf8, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x40, 0xc7, 0x11, 0x28, 0x0c,
	0x03, 0x00, 0x00,
}
